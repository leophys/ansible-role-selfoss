---
- include_vars: "{{ ansible_os_family }}.yml"
- include: "install-{{ ansible_os_family }}.yml"

- name: Ensure directories have correct ownership
  file:
    path: "{{ selfoss_default_install_dir }}"
    owner: "{{ selfoss_www_user }}"
    group: "{{ selfoss_www_group }}"
    recurse: yes
    mode: 0750

- name: Installation on another directory
  block:
  - name: Check if target install directory exists
    file:
      path: "{{ selfoss_install_dir }}"
      state: absent
    check_mode: yes
    changed_when: false
    register: selfoss_target_dir_state
  - name: Install selfoss to target directory
    copy:
      src: "{{ selfoss_default_install_dir }}/"
      dest: "{{ selfoss_install_dir }}"
      remote_src: yes
      owner: "{{ selfoss_www_user }}"
      group: "{{ selfoss_www_group }}"
    when: selfoss_target_dir_state.state == "absent"
  when: selfoss_default_install_dir != selfoss_install_dir

- name: Ensure the correct salt is present
  block:
  - name: Check the value of salt in config.ini
    lineinfile:
      path: "{{ selfoss_install_dir }}/config.ini"
      line: salt=lkjl1289
      state: present
    check_mode: yes
    changed_when: false
    register: selfoss_salt_state
  - name: Write the new salt in config.ini
    ini_file:
      path: "{{ selfoss_install_dir }}/config.ini"
      section: globals
      option: salt
      value: "{{ selfoss_password_salt }}"
    when: selfoss_salt_state.changed == false and selfoss_salt_state.msg != 'line added'
  when: selfoss_password_salt is defined

- name: Ensure correct initialization of the username
  block:
  - name: Check the value of username in config.ini
    lineinfile:
      path: "{{ selfoss_install_dir }}/config.ini"
      line: username=
      state: present
    check_mode: yes
    changed_when: false
    register: selfoss_username_state
  - name: Write the username in config.ini
    ini_file:
      path: "{{ selfoss_install_dir }}/config.ini"
      section: globals
      option: username
      value: "{{ __selfoss_username }}"
    when: selfoss_username_state.changed == false and selfoss_username_state.msg != 'line added'
  when: selfoss_username is defined

- name: Ensure correct initialization of the password
  block:
  - name: Check the value of password in config.ini
    lineinfile:
      path: "{{ selfoss_install_dir }}/config.ini"
      line: password=
      state: present
    check_mode: yes
    changed_when: false
    register: selfoss_password_state
  - name: Write the hashed password in config.ini
    ini_file:
      path: "{{ selfoss_install_dir }}/config.ini"
      section: globals
      option: password
      value: "{{ selfoss_password_hash }}"
    when: selfoss_password_state.changed == false and selfoss_password_state.msg != 'line added'
  when: selfoss_password_hash is defined

- name: Ensure feeds are updated with a cron job
  cron:
    name: "Update feeds for {{ selfoss_username | default('selfoss service') }}"
    special_time: "{{ selfoss_special_time }}"
    job: "sleep $((RANDOM \\% 300)) && {{ selfoss_php_path }} {{ selfoss_install_dir }}/cliupdate.php"
    user: "{{ selfoss_www_user }}"
